/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-01-03 12:23:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html >\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>sdn水下传感器网络初始化最大权值路由系统</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("css/bootstrap.min.css\"/>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("css/bootstrap-responsive.min.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("css/theme.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("images/icons/css/font-awesome.css\"/>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("css/index.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\t\r\n");
      out.write("\t<div class=\"navbar navbar-fixed-top\">\r\n");
      out.write("        <div class=\"navbar-inner\">\r\n");
      out.write("            <div class=\"container-fluid\">\r\n");
      out.write("                <a class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".navbar-inverse-collapse\">\r\n");
      out.write("                    <i class=\"icon-reorder shaded\"></i></a><a class=\"brand\" href=\"index.html\">sdn水下传感器网络初始化最大权值路由系统</a>\r\n");
      out.write("                <div class=\"nav-collapse collapse navbar-inverse-collapse\">\r\n");
      out.write("                    <ul class=\"nav pull-left\">\r\n");
      out.write("\t                    \t<ul class=\"nav nvabar-nav\">\r\n");
      out.write("                                <li class=\"active\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("weight/toIndex\">首页</a></li>\r\n");
      out.write("\t                                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("node/find\">节点管理</a></li>\r\n");
      out.write("\t                                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("weight/find\">权值管理</a></li>\r\n");
      out.write("\t                                 ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t                             <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("show.jsp\">说明书</a></li>\r\n");
      out.write("\t\t                             <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("welcome.jsp\">关于我们</a></li>\r\n");
      out.write("\t                        </ul> \r\n");
      out.write("                       \r\n");
      out.write("                    </ul>\r\n");
      out.write("                    <ul class=\"nav pull-right\">\r\n");
      out.write("                    \t<ul class=\"nav nvabar-nav\">\r\n");
      out.write("                                \r\n");
      out.write("                                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/toUpdate?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"><span><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("images/user.png\" width=\"20px\" height=\"28px\"/><span style=\"padding-top:5px\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</span></span></a></li>\r\n");
      out.write("                                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("logout\"><span><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("images/logout.png\" width=\"20px\" height=\"28px\"/></span></a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- /.nav-collapse -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /navbar-inner -->\r\n");
      out.write("      </div>\r\n");
      out.write("\t\t<div class=\"wrapper\"> \r\n");
      out.write("\t\t         \t\t<div class=\"left\">\r\n");
      out.write("\t\t         \t\t\t<div id=\"main\" style=\"width: 100%;height:500px;font-size: 20px;\">\r\n");
      out.write("\t\t         \t\t\t<h2>&nbsp;sdn水下传感器网络图</h2>\r\n");
      out.write("\t\t         \t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div  style=\"width: 100%;height:300px;padding-top:20px;padding-left:20px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t节点数：<input type=\"text\" id=\"num\" style=\"width:90px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" value=\"生成节点\" onclick=\"generateNodes();\" class=\"btn btn-default btn-primary\" style=\"margin-top:-10px;margin-left:10px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t 开始节点名称：<select id=\"start\" style=\"width:50px;margin-right:15px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>A</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>B</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>C</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>D</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>E</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>F</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>G</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>H</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>I</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t </select>\r\n");
      out.write("\t\t\t\t\t\t\t\t 结束节点名称：<select id=\"end\" style=\"width:50px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>A</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>B</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>C</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>D</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>E</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>F</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>G</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>H</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t<option>I</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t </select>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" value=\"开始\" onclick=\"_getRoutes();\" class=\"btn btn-default btn-primary\" style=\"margin-top:-10px;margin-left:10px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" value=\"下一步\" onclick=\"_nextRoutes();\" class=\"btn btn-default btn-primary\" style=\"margin-top:-10px;margin-left:10px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" value=\"重置节点\" onclick=\"resetNodes();\" class=\"btn btn-default btn-primary\" style=\"margin-top:-10px;margin-left:10px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"maxWeight\" style=\"color: green;\" ></div>\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"msg\" style=\"color: red;padding-top: 10px;\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t         \t\t</div>\r\n");
      out.write("\t\t         \t\t<div class=\"right\">\r\n");
      out.write("\t\t         \t\t\t<div class=\"tablelist\"> \r\n");
      out.write("\t\t         \t\t\t\t<table id=\"myTable\" class=\"table table-striped table-hover \" >\r\n");
      out.write("\t\t         \t\t\t\t<caption style=\"padding:8px \"><h4>路 径 表</h4></caption>\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t  <thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t    <tr>\t      \r\n");
      out.write("\t\t\t\t\t\t\t\t      <th>编号</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t      <th>路径</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t      <th>权值</th>\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t      <th>长度</th>\t     \r\n");
      out.write("\t\t\t\t\t\t\t\t    </tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t  </thead>\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t  <tbody id=\"myTbody\" >\t  \t\r\n");
      out.write("\t\t\t\t\t\t\t\t  </tbody>\r\n");
      out.write("\t\t\t\t\t\t\t  </table>        \t\t\t\t\r\n");
      out.write("\t\t         \t\t\t</div>\r\n");
      out.write("\t\t         \t\t</div>\r\n");
      out.write("\t\t      <!--/.container-->\r\n");
      out.write("\t\t</div>  \r\n");
      out.write("\t  <div class=\"footer\">\r\n");
      out.write("          <div class=\"container\">\r\n");
      out.write("              <p>本项目由河南科技学院提供技术支持，版权所有</p>\r\n");
      out.write("          </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 引入 ECharts 文件 -->\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("js/echarts.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("js/jquery.min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\tvar height = $(window).height()-60;\r\n");
      out.write("\t\t\tif(height<600)\r\n");
      out.write("\t\t\t\theight = 600;\r\n");
      out.write("\t\t\t$(\".left\").height(height);\r\n");
      out.write("\t\t\t$(\".right\").height(height);\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\t\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("window.onload=function(){ \r\n");
      out.write("\t\tif(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${nodes!=null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tgetOldNodes();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("} \r\n");
      out.write("/*\r\n");
      out.write(" * 生成节点\r\n");
      out.write(" */\r\n");
      out.write("function generateNodes(){\r\n");
      out.write("\t var num=document.getElementById(\"num\").value;  \r\n");
      out.write("\t _deleteMsg();\r\n");
      out.write("\t _deleteMaxWeight();\r\n");
      out.write("\t if(num>=2 && num<=9){\r\n");
      out.write("\t\t _getNodes(num);\r\n");
      out.write("\t\t removeRoutes();\r\n");
      out.write("\t }else{\t\t \r\n");
      out.write("\t\t _setMsg(\"节点数应该在2~9范围内\");\r\n");
      out.write("\t }\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("/**\r\n");
      out.write(" * 刷新页面\r\n");
      out.write(" */\r\n");
      out.write("function _flush(){\r\n");
      out.write("\tlocation.reload(true);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 生成提示信息\r\n");
      out.write(" */\r\n");
      out.write("function _setMsg(msg){\r\n");
      out.write("\tdocument.getElementById(\"msg\").innerHTML=msg;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/**\r\n");
      out.write(" * 删除提示信息\r\n");
      out.write(" */\r\n");
      out.write("function _deleteMsg(){\r\n");
      out.write("\tdocument.getElementById(\"msg\").innerHTML=\"\";\r\n");
      out.write("} \r\n");
      out.write("/**\r\n");
      out.write(" * 显示上次最大权值\r\n");
      out.write(" */\r\n");
      out.write("function _setMaxWeight(_maxNodes){\r\n");
      out.write("\tvar max=\"该轮次最大权值：\";\r\n");
      out.write("\tfor(var i=0;i<_maxNodes.length;i++){\r\n");
      out.write("\t\tmax+=(_maxNodes[i].node_A+_maxNodes[i].node_B+\"=\"+_maxNodes[i].weight);\r\n");
      out.write("\t}\r\n");
      out.write("\tdocument.getElementById(\"maxWeight\").innerHTML=max;\r\n");
      out.write("} \r\n");
      out.write("/**\r\n");
      out.write(" * 删除旧的最大权值\r\n");
      out.write(" */\r\n");
      out.write("function _deleteMaxWeight(){\r\n");
      out.write("\tdocument.getElementById(\"maxWeight\").innerHTML=\"\";\r\n");
      out.write("} \r\n");
      out.write("/* \r\n");
      out.write(" *获得路径 \r\n");
      out.write(" */\r\n");
      out.write("function _getRoutes(){ \r\n");
      out.write("\t\t_deleteMsg();\r\n");
      out.write("\t\t_deleteMaxWeight();\r\n");
      out.write("\t\tvar start=document.getElementById(\"start\").value; \r\n");
      out.write("\t\tvar end=document.getElementById(\"end\").value;\r\n");
      out.write("\t\tif(start==\"\" || end==\"\"){\r\n");
      out.write("\t\t\t_deleteMsg();\r\n");
      out.write("\t\t\t_setMsg(\"节点名称不能为空\");\r\n");
      out.write("\t\t}else if(start==end){\r\n");
      out.write("\t\t\t_deleteMsg();\r\n");
      out.write("\t\t\t_setMsg(\"两节点名称不能相同\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t var xmlhttp;  \r\n");
      out.write("\t\t\t\tif (window.XMLHttpRequest) {\r\n");
      out.write("\t\t\t\t\t// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码\r\n");
      out.write("\t\t\t\t\txmlhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t// IE6, IE5 浏览器执行代码\r\n");
      out.write("\t\t\t\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\txmlhttp.onreadystatechange = function() {\r\n");
      out.write("\t\t\t\t\tif (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\t\t\r\n");
      out.write("\t\t\t\t\t\tvar result =xmlhttp.responseText;\r\n");
      out.write("\t\t\t\t\t\tif(result!=null && result!=\"\" && result!=[]){\r\n");
      out.write("\t\t\t\t\t\t\tvar json = eval(\"(\" + result + \")\");\r\n");
      out.write("\t\t\t\t\t\t\tif(json!=null && json!=\"\" && json!=[]){\r\n");
      out.write("\t\t\t\t\t\t\t\t//生成路径表\r\n");
      out.write("\t\t\t\t\t\t\t\tvar _routess=new Array();\r\n");
      out.write("\t\t\t\t\t\t\t\t_routess=json[0];\r\n");
      out.write("\t\t\t\t\t\t\t\tif(_routess!=null && _routess!=\"\" && _routess!=[]){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgeneraterRoutes(_routess);\r\n");
      out.write("\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t_deleteMsg();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t_setMsg(\"请输入正确的节点名称\");\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t//画图\r\n");
      out.write("\t\t\t\t\t\t\t\tvar _nodes=new Array();\r\n");
      out.write("\t\t\t\t\t\t\t\t_nodes=json[1];\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tvar _relations=new Array();\r\n");
      out.write("\t\t\t\t\t\t\t\t_relations=json[2];\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tif(_nodes!=null && _nodes!=\"\" && _relations!=null && _relations!=\"\" ){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t_draw(_nodes,_relations);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t_deleteMsg();\r\n");
      out.write("\t\t\t\t\t\t\t\t_setMsg(\"请输入正确的节点名称\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t_deleteMsg();\r\n");
      out.write("\t\t\t\t\t\t\t_setMsg(\"请先输入节点数初始化拓补图\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\txmlhttp.open(\"POST\", \"getRoutes\", true);\r\n");
      out.write("\t\t\t\txmlhttp.setRequestHeader(\"Content-type\",\r\n");
      out.write("\t\t\t\t\t\t\"application/x-www-form-urlencoded\");\r\n");
      out.write("\t\t\t\txmlhttp.send(\"start=\"+start+\"&end=\"+end);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t   \r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("/* 生成路径表 */\r\n");
      out.write("function generaterRoutes(_routes){\r\n");
      out.write("\t\r\n");
      out.write("\tif (_routes != null || _routes != \"\") {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tremoveRoutes();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar tabNode = document.getElementById(\"myTbody\");\r\n");
      out.write("\t\tfor(var i=0;i<_routes.length;i++){\r\n");
      out.write("\t\t\tvar trNode = tabNode.insertRow(); \t\t\t\r\n");
      out.write("\t\t\tfor(var j=0;j<4;j++){\r\n");
      out.write("\t\t\t\t var tdNode=trNode.insertCell(); \r\n");
      out.write("\t\t\t\t var text=\"\";\r\n");
      out.write("\t\t\t\t if(j==0){\r\n");
      out.write("\t\t\t\t\t text=i+1;\r\n");
      out.write("\t\t\t\t }else if(j==1){\r\n");
      out.write("\t\t\t\t\t text=_routes[i].route;\r\n");
      out.write("\t\t\t\t }else if(j==2){\r\n");
      out.write("\t\t\t\t\t text=_routes[i].weights;\r\n");
      out.write("\t\t\t\t }else if(j==3){\r\n");
      out.write("\t\t\t\t\t text=_routes[i].length;\r\n");
      out.write("\t\t\t\t }\r\n");
      out.write("\t\t\t     tdNode.innerHTML=text; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\t\t\t\t    \r\n");
      out.write("\t} \r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("/* 删除路径表 */\r\n");
      out.write("function removeRoutes(){\r\n");
      out.write("\tvar tb = document.getElementById(\"myTable\");\r\n");
      out.write("\t//var tb = document.getElementById('attAchments');\r\n");
      out.write("    var rowNum=tb.rows.length;\r\n");
      out.write("    for (i=1;i<rowNum;i++)\r\n");
      out.write("    {\r\n");
      out.write("        tb.deleteRow(i);\r\n");
      out.write("        rowNum=rowNum-1;\r\n");
      out.write("        i=i-1;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 下一步\r\n");
      out.write(" */\r\n");
      out.write("function _nextRoutes(){\r\n");
      out.write("\t _deleteMsg();\r\n");
      out.write("\t var xmlhttp;  \r\n");
      out.write("\t\tif (window.XMLHttpRequest) {\r\n");
      out.write("\t\t\t// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码\r\n");
      out.write("\t\t\txmlhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t// IE6, IE5 浏览器执行代码\r\n");
      out.write("\t\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\txmlhttp.onreadystatechange = function() {\r\n");
      out.write("\t\t\tif (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\t\t\r\n");
      out.write("\t\t\t\t \r\n");
      out.write("\t\t\t\t var result =xmlhttp.responseText;\r\n");
      out.write("\t\t\t\tif(result!=null && result!=\"\"){\r\n");
      out.write("\t\t\t\t\tvar json = eval(\"(\" + result + \")\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//最大权值\r\n");
      out.write("\t\t\t\t\tvar _maxNodes=new Array();\r\n");
      out.write("\t\t\t\t\t_maxNodes=json[0];\r\n");
      out.write("\t\t\t\t\tif(_maxNodes!=null && _maxNodes!=\"\"){\r\n");
      out.write("\t\t\t\t\t\t_deleteMaxWeight();\r\n");
      out.write("\t\t\t\t\t\t_setMaxWeight(_maxNodes);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//节点\r\n");
      out.write("\t\t\t\t\tvar _nodes=new Array();\r\n");
      out.write("\t\t\t\t\t_nodes=json[1];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//节点关系\r\n");
      out.write("\t\t\t\t\tvar _relations=new Array();\r\n");
      out.write("\t\t\t\t\t_relations=json[2];\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//画图\r\n");
      out.write("\t\t\t\t\tif(_nodes!=null && _nodes!=\"\" && _relations!=null && _relations!=\"\"){\r\n");
      out.write("\t\t\t\t\t\t_draw(_nodes,_relations); \r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//路径\r\n");
      out.write("\t\t\t\t\tvar _routess=new Array();\r\n");
      out.write("\t\t\t\t\t_routess=json[3];\r\n");
      out.write("\t\t\t\t\tif(_routess!=null && _routess!=\"\"){\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tfor(var i=0;i<_routess.length;i++){\r\n");
      out.write("\t\t\t\t\t\t\tif(_routess[i].length==_maxNodes[0].weight){\r\n");
      out.write("\t\t\t\t\t\t\t\t_deleteMsg();\r\n");
      out.write("\t\t\t\t\t\t\t\t_setMsg(\"生成最终路径\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tgeneraterRoutes(_routess);\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t_deleteMsg();\r\n");
      out.write("\t\t\t\t\t_setMsg(\"请选择节点生成路径\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\txmlhttp.open(\"GET\", \"nextRoutes\", true);\r\n");
      out.write("\t\t//xmlhttp.setRequestHeader(\"Content-type\",\r\n");
      out.write("\t\t\t\t//\"application/x-www-form-urlencoded\");\r\n");
      out.write("\t\txmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("/*\r\n");
      out.write(" * 获得节点和关系数据\r\n");
      out.write("  */\r\n");
      out.write("function _getNodes(num){ \r\n");
      out.write("\t\r\n");
      out.write("\t    var xmlhttp;  \r\n");
      out.write("\t\tif (window.XMLHttpRequest) {\r\n");
      out.write("\t\t\t// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码\r\n");
      out.write("\t\t\txmlhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t// IE6, IE5 浏览器执行代码\r\n");
      out.write("\t\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\txmlhttp.onreadystatechange = function() {\r\n");
      out.write("\t\t\tif (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\t\t\r\n");
      out.write("\t\t\t\tvar result = xmlhttp.responseText;\r\n");
      out.write("\t\t\t\tif(result!=null && result!=[] && result!=\"\"){\r\n");
      out.write("\t\t\t\t\tvar json = eval(\"(\" + result + \")\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//节点\r\n");
      out.write("\t\t\t\t\tvar _nodes=new Array(); \r\n");
      out.write("\t\t\t\t\t_nodes=json[0];\r\n");
      out.write("\t    \t\r\n");
      out.write("\t\t\t    \t//节点权值\r\n");
      out.write("\t\t\t    \tvar _relations=new Array(); \r\n");
      out.write("\t\t\t\t\t_relations=json[1];\r\n");
      out.write("\t   \t\t\t\t\r\n");
      out.write("\t\t\t\t\t//画图\r\n");
      out.write("\t\t\t\t\tif(_nodes!=null && _nodes!=\"\" && _relations!=null && _relations!=\"\"){\r\n");
      out.write("\t\t\t\t\t\t_draw(_nodes,_relations); \r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t    \t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t \t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\txmlhttp.open(\"POST\", \"generateNodes\", true);\r\n");
      out.write("\t\txmlhttp.setRequestHeader(\"Content-type\",\r\n");
      out.write("\t\t\t\t\"application/x-www-form-urlencoded\");\r\n");
      out.write("\t\txmlhttp.send(\"num=\"+num);\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("/**\r\n");
      out.write(" * 根据数据库中的节点画图 \r\n");
      out.write(" */\r\n");
      out.write("function getOldNodes(){\r\n");
      out.write("\tvar xmlhttp;  \r\n");
      out.write("\tif (window.XMLHttpRequest) {\r\n");
      out.write("\t\t// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码\r\n");
      out.write("\t\txmlhttp = new XMLHttpRequest();\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\t// IE6, IE5 浏览器执行代码\r\n");
      out.write("\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t}\r\n");
      out.write("\txmlhttp.onreadystatechange = function() {\r\n");
      out.write("\t\tif (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\t\t\r\n");
      out.write("\t\t\tvar result = xmlhttp.responseText;\r\n");
      out.write("\t\t\tif(result!=null && result!=[] && result!=\"\"){\r\n");
      out.write("\t\t\t\tvar json = eval(\"(\" + result + \")\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//节点\r\n");
      out.write("\t\t\t\tvar _nodes=new Array(); \r\n");
      out.write("\t\t\t\t_nodes=json[0];\r\n");
      out.write("    \t\r\n");
      out.write("\t\t    \t//节点权值\r\n");
      out.write("\t\t    \tvar _relations=new Array(); \r\n");
      out.write("\t\t\t\t_relations=json[1];\r\n");
      out.write("   \t\t\t\t\r\n");
      out.write("\t\t\t\t//画图\r\n");
      out.write("\t\t\t\tif(_nodes!=null && _nodes!=\"\" && _relations!=null && _relations!=\"\"){\r\n");
      out.write("\t\t\t\t\t_draw(_nodes,_relations); \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t\t}\r\n");
      out.write(" \t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\txmlhttp.open(\"GET\", \"getOldNodes\", true);\r\n");
      out.write("\t/* xmlhttp.setRequestHeader(\"Content-type\",\r\n");
      out.write("\t\t\t\"application/x-www-form-urlencoded\"); */\r\n");
      out.write("\txmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 画图\r\n");
      out.write(" */\r\n");
      out.write("function _draw(_nodes,_relations) {\r\n");
      out.write("\t\r\n");
      out.write("\t//节点\r\n");
      out.write("\tvar _nodesSwitch=new Array();   \t\t\t\t\r\n");
      out.write("\tfor(var i = 0;i < _nodes.length;i++){\t   \t     \r\n");
      out.write("\t\t_nodesSwitch.push({\r\n");
      out.write("\t\t\t\"name\":_nodes[i].name,\r\n");
      out.write("\t\t\t \"ip\":_nodes[i].name+\"(\"+_nodes[i].x+\",\"+_nodes[i].y+\")\",\r\n");
      out.write("\t\t\t\"isnode\":true,\r\n");
      out.write("\t\t\t\"x\":_nodes[i].x,\r\n");
      out.write("\t\t\t\"y\":_nodes[i].y\r\n");
      out.write("\t\t});\t\t    \t\t\r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\t//节点关系\r\n");
      out.write("\tvar _relationsSwitch=new Array();  \r\n");
      out.write("\tfor(var i = 0;i <_relations.length;i++){\t   \t     \r\n");
      out.write("\t\t_relationsSwitch.push({\r\n");
      out.write("\t\t\t 'source':_relations[i].node_A,\r\n");
      out.write("             'target':_relations[i].node_B,\r\n");
      out.write("             'islink':true,\r\n");
      out.write("             'weight':_relations[i].weight,\t\t\t             \r\n");
      out.write("\t\t\t});\t\t    \t\t\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//基于准备好的dom，初始化echarts实例\r\n");
      out.write("\tvar myChart = echarts.init(document.getElementById('main'));\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tvar  option = {\r\n");
      out.write("\t backgroundColor: '#F0F0F0',\r\n");
      out.write("\t title: {\r\n");
      out.write("\t     text: 'sdn水下传感器网络图',\r\n");
      out.write("\t },\r\n");
      out.write("\t tooltip:{},\r\n");
      out.write("\t animationDurationUpdate: 1500,\r\n");
      out.write("\t animationEasingUpdate: 'quinticInOut',\r\n");
      out.write("\t series : [\r\n");
      out.write("\t     {\r\n");
      out.write("\t         type: 'graph',\r\n");
      out.write("\t         layout: 'none',\r\n");
      out.write("\t         symbolSize: 20,//图形的大小（示例中的圆的大小）\r\n");
      out.write("\t         roam: true,//鼠标缩放及平移\r\n");
      out.write("\t         focusNodeAdjacency:true,//是否在鼠标移到节点上的时候突出显示节点以及节点的边和邻接节点\r\n");
      out.write("\t         label: {\r\n");
      out.write("\t             normal: {\r\n");
      out.write("\t                 show: true ,  //控制非高亮时节点名称是否显示\r\n");
      out.write("\t                 position:'top',\r\n");
      out.write("\t                 fontSize:20\r\n");
      out.write("\t             }\r\n");
      out.write("\t         },\r\n");
      out.write("\r\n");
      out.write("\t         edgeSymbol: ['circle', 'arrow'],\r\n");
      out.write("\t         edgeSymbolSize: [0, 0],    //箭头的大小\r\n");
      out.write("\t         edgeLabel: {\r\n");
      out.write("\t             normal:{\r\n");
      out.write("\t                 show:false\r\n");
      out.write("\t             },\r\n");
      out.write("\t             emphasis: {\r\n");
      out.write("\t                 textStyle: {\r\n");
      out.write("\t                     fontSize: 20  //边节点显示的字体大小\r\n");
      out.write("\t                 }\r\n");
      out.write("\t             }\r\n");
      out.write("\t         },\r\n");
      out.write("\r\n");
      out.write("\t//节点信息\r\n");
      out.write("\r\n");
      out.write("\t data:_nodesSwitch,\r\n");
      out.write("\r\n");
      out.write("\t links:_relationsSwitch,\r\n");
      out.write("\t         lineStyle: {\r\n");
      out.write("\t             normal: {\r\n");
      out.write("\t                 show:true,\r\n");
      out.write("\t                 color:\r\n");
      out.write("\t                 {       \r\n");
      out.write("\t                         type: 'linear',\r\n");
      out.write("\t                         x: 0,\r\n");
      out.write("\t                         y: 0,\r\n");
      out.write("\t                         x2: 0,\r\n");
      out.write("\t                         y2: 1,\r\n");
      out.write("\t                         colorStops: [\r\n");
      out.write("\t                         {\r\n");
      out.write("\t                             offset: 0, color: 'red' // 0% 处的颜色\r\n");
      out.write("\t                         }\r\n");
      out.write("\t                         ,{\r\n");
      out.write("\t                             offset: 1, color: 'blue' // 100% 处的颜色\r\n");
      out.write("\t                         }],\r\n");
      out.write("\t                         globalCoord: false // 缺省为 false\r\n");
      out.write("\t                     },\r\n");
      out.write("\t               \r\n");
      out.write("\t              // curveness: 0.2\r\n");
      out.write("\t                   \r\n");
      out.write("\t             },\r\n");
      out.write("\t             emphasis:{\r\n");
      out.write("\t                 color:'red',\r\n");
      out.write("\t                 width:3,\r\n");
      out.write("\t                 type:'dashed',//虚线\r\n");
      out.write("\r\n");
      out.write("\t             }\r\n");
      out.write("\t         },\r\n");
      out.write("\t        \r\n");
      out.write("\t         tooltip:\r\n");
      out.write("\t         {\r\n");
      out.write("\t         position:'bottom',//悬浮时显示的位置\r\n");
      out.write("\t         backgroundColor:'green',\r\n");
      out.write("\t         textStyle:{fontSize:18,\r\n");
      out.write("\r\n");
      out.write("\t         },\r\n");
      out.write("\r\n");
      out.write("\t         formatter:function(params){//悬浮提示框显示的内容\r\n");
      out.write("\t            if (params.data.islink) {\r\n");
      out.write("\t            \treturn '节点'+params.data.target+params.data.source+'权值：'+params.data.weight;\r\n");
      out.write("\t            }\r\n");
      out.write("\t            else if (params.data.isnode){return params.data.ip;}\r\n");
      out.write("\t         }\r\n");
      out.write("\t         },//悬浮时的提示框，不设置时是随鼠标移动\r\n");
      out.write("\r\n");
      out.write("\t     }\r\n");
      out.write("\t ]\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t// 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("\tmyChart.setOption(option);\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//重置节点\r\n");
      out.write("function resetNodes() {\r\n");
      out.write("\t_deleteMsg();\r\n");
      out.write("\t_deleteMaxWeight();\r\n");
      out.write("\tremoveRoutes();\r\n");
      out.write("\tvar xmlhttp;  \r\n");
      out.write("\tif (window.XMLHttpRequest) {\r\n");
      out.write("\t\t// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码\r\n");
      out.write("\t\txmlhttp = new XMLHttpRequest();\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\t// IE6, IE5 浏览器执行代码\r\n");
      out.write("\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t}\r\n");
      out.write("\txmlhttp.onreadystatechange = function() {\r\n");
      out.write("\t\tif (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\t\t\r\n");
      out.write("\t\t\tvar result = xmlhttp.responseText;\r\n");
      out.write("\t\t\tif(result!=null && result!=[] && result!=\"\"){\r\n");
      out.write("\t\t\t\tvar json = eval(\"(\" + result + \")\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//节点\r\n");
      out.write("\t\t\t\tvar _nodes=new Array(); \r\n");
      out.write("\t\t\t\t_nodes=json[0];\r\n");
      out.write("    \t\r\n");
      out.write("\t\t    \t//节点权值\r\n");
      out.write("\t\t    \tvar _relations=new Array(); \r\n");
      out.write("\t\t\t\t_relations=json[1];\r\n");
      out.write("   \t\t\t\t\r\n");
      out.write("\t\t\t\t//画图\r\n");
      out.write("\t\t\t\tif(_nodes!=null && _nodes!=\"\" && _relations!=null && _relations!=\"\"){\r\n");
      out.write("\t\t\t\t\t_draw(_nodes,_relations); \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t    \t\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t_setMsg(\"请先输入节点数初始化拓补图\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write(" \t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\txmlhttp.open(\"GET\", \"resetNodes\", true);\r\n");
      out.write("\t/* xmlhttp.setRequestHeader(\"Content-type\",\r\n");
      out.write("\t\t\t\"application/x-www-form-urlencoded\"); */\r\n");
      out.write("\txmlhttp.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"js/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/view/index.jsp(27,34) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.type=='管理员'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t                            \t<li><a href=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rootPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("user/find\">用户管理</a></li>\r\n");
        out.write("\t\t                             ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
